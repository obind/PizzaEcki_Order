<Window x:Class="PizzaKitchenClient.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:services="clr-namespace:PizzaKitchenClient.Services"
        Title="Kitchen Mate" Height="852" Width="1450"
        MinWidth="1000" MinHeight="800" KeyDown="Window_KeyDown">
    <Window.Resources>

        <services:TextToColorConverter x:Key="TextToColorConverter"/>

        <ContextMenu  x:Key="HeaderContextMenu">
            <MenuItem Header="Bon" IsCheckable="True" IsChecked="True" Click="ToggleColumnVisibility" Tag="Bon"/>
            <MenuItem Header="Kunde" IsCheckable="True" IsChecked="True" Click="ToggleColumnVisibility" Tag="Kunde"/>
            <MenuItem Header="Name" IsCheckable="True" IsChecked="True" Click="ToggleColumnVisibility" Tag="Name"/>
            <MenuItem Header="Offen seit" IsCheckable="True" IsChecked="True" Click="ToggleColumnVisibility" Tag="OffenSeit"/>
            <MenuItem Header="Lieferung bis" IsCheckable="True" IsChecked="True" Click="ToggleColumnVisibility" Tag="LieferungBis"/>
            <MenuItem Header="Straße" IsCheckable="True" IsChecked="True" Click="ToggleColumnVisibility" Tag="Straße"/>
            <MenuItem Header="Lieferart" IsCheckable="True" IsChecked="True" Click="ToggleColumnVisibility" Tag="Lieferart"/>
            <MenuItem Header="Gerichte" IsCheckable="True" IsChecked="True" Click="ToggleColumnVisibility" Tag="Gerichte"/>
        </ContextMenu>

        <!-- Definiere einen Style für GridViewColumnHeader -->
        <Style TargetType="GridViewColumnHeader">
            <Setter Property="ContextMenu" Value="{StaticResource HeaderContextMenu}" />
            <Setter Property="Background" Value="#FF602C"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridViewColumnHeader">
                        <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CustomButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#FF602C"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Padding" Value="1,5,1,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Trigger für den deaktivierten Zustand -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="LightGray"/>
                                <!-- Deaktivierte Hintergrundfarbe -->
                                <Setter Property="Foreground" Value="Gray"/>
                                <!-- Deaktivierte Textfarbe -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ListViewItem">
            <Setter Property="Padding" Value="4"/>
            <Setter Property="Margin" Value="0,20,0,20"/>
            <!-- Erhöhter Abstand -->
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
      
        </Style>


        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#ff3300   "/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="Button">

            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="5">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true" >
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter TargetName="border" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="Black" Direction="320" ShadowDepth="7" BlurRadius="5" Opacity="0.5"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Window.Resources>

    <Grid Background="#FF1D1E20">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="0.4*"/>
        </Grid.ColumnDefinitions>
        <ListView x:Name="OrdersList" Margin="20,10,20,10" Grid.ColumnSpan="3" FontSize="16" SelectionMode="Single" Foreground="White" Background="#FF3D4248" HorizontalContentAlignment="Center">



            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="Margin" Value="0,10,0,10"/>
                    <!-- Erhöhter Abstand zwischen den Zeilen -->
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <!-- Trigger für die Mouseover-Effekte -->
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF5F6269" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="BorderBrush" Value="#ff602c" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#FF5F6269" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="BorderBrush" Value="#ff602c" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>

            <ListView.View>

                <GridView >
                    <GridViewColumn x:Name="Bon" Header="Bon" Width="50" >
                        <GridViewColumn.CellTemplate >
                            <DataTemplate >
                                <Border BorderBrush="Gray" BorderThickness="0,0,0,1">
                                    <TextBlock Text="{Binding BonNumber}"  HorizontalAlignment="Center" />
                                </Border>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>


                    <GridViewColumn x:Name="Kunde" Header="Kunde" Width="150">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Border BorderBrush="Gray" BorderThickness="0,0,0,1">
                                    <TextBlock Text="{Binding CustomerPhoneNumber}" Foreground="{Binding CustomerPhoneNumber, Converter={StaticResource TextToColorConverter}}" HorizontalAlignment="Center" />
                                </Border>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn x:Name="Name" Header="Name" Width="150">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Border BorderBrush="Gray" BorderThickness="0,0,0,1">
                                    <TextBlock Text="{Binding Customer.Name}" HorizontalAlignment="Center" />
                                </Border>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Offen seit" Width="100">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Border BorderBrush="Gray" BorderThickness="0,0,0,1">
                                    <TextBlock Text="{Binding Timestamp}" HorizontalAlignment="Center" />
                                </Border>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn x:Name="Lieferung" Header="Lieferung bis" Width="120">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Border BorderBrush="Gray" BorderThickness="0,0,0,1">
                                    <TextBlock Text="{Binding DeliveryUntil}" HorizontalAlignment="Center" />
                                </Border>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Straße" Width="150">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Border BorderBrush="Gray" BorderThickness="0,0,0,1">
                                    <TextBlock Text="{Binding Customer.Street}" HorizontalAlignment="Center" />
                                </Border>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn x:Name="Lieferart" Header="Lieferart" Width="150">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Border BorderBrush="Gray" BorderThickness="0,0,0,1">
                                    <TextBlock Text="{Binding LieferStatus}" HorizontalAlignment="Center" />
                                </Border>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <!--<GridViewColumn x:Name="Gericht" Header="Gerichte" Width="1100">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <ItemsControl ItemsSource="{Binding OrderItems}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Border BorderBrush="#FF602C" BorderThickness="0,0,0,0" Margin="0,5">
                                                --><!-- Trennlinie zwischen den Items --><!--
                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                                    <TextBlock Text="Menge: " Width="50" />
                                                    <TextBlock Text="{Binding Menge}" Width="50" FontWeight="Bold" />
                                                    <TextBlock Text="Größe: " Width="50" />
                                                    <TextBlock Text="{Binding Größe}" Width="30" FontWeight="Bold" />
                                                    <TextBlock Text="{Binding Gericht}" Margin="0 0 20 0" FontWeight="Bold" />
                                                    <TextBlock Text="Extras: " Width="70" />
                                                    <TextBlock Text="{Binding Extras}" FontWeight="Bold" />
                                                </StackPanel>
                                            </Border>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>-->
                </GridView>
            </ListView.View>
        </ListView>


        <WrapPanel x:Name="DriversPanel" Grid.Row="1" Margin="20,0,0,0" Grid.ColumnSpan="2" Orientation="Horizontal" Loaded="DriversPanel_Loaded">

            <!-- Dynamisch generierte Buttons werden hier hinzugefügt -->
        </WrapPanel>
        <Button Name="LetzteZuordnung_btn"  Style="{DynamicResource ButtonStyle1}" Grid.Column="2" Grid.Row="1" Content="Letzte Zuordnung" Margin="10,0,18,0"  Background="#FF602C" Foreground="White" FontWeight="SemiBold" Padding="1,5,1,5" Click="LetzteZuordnung_btn_Click"/>

        <Label x:Name="ConnectionStatusLabel" Grid.Row="2" Grid.Column="2"  Content="Nicht verbunden" Foreground="White" Margin="12,0,20,0" HorizontalAlignment="Center"/>

    </Grid>
</Window>
